<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sopms.risk.dao.riskDao">
	<select id="riskListPaging" resultType="risk" parameterType="riskSch">
		SELECT * FROM 
			(SELECT rownum AS NO, a.* FROM 
			(SELECT p.pname, r.risk_name, r.risk_no, r.risk_status, to_char(r.risk_reg,'yyyy-mm-dd') AS risk_reg, nvl(to_char(r2.RISK_JOCHIUPT,'yyyy-mm-dd'), '-') AS risk_upt, m.name as m_name
			FROM LESOURCE l , PROJECT p, RISK r, RISKJOCHI r2, MEMBER m 
			WHERE p.PCODE = l.PCODE 
			AND p.pcode = r.PCODE 
			AND r.risk_no = r2.risk_no(+)
			AND r.id = m.id
			AND l.id = #{id}
			ORDER BY risk_reg DESC ) a
			WHERE risk_name like '%'||#{risk_name}||'%'
			AND m_name LIKE '%'||#{name}|| '%'
			)
			WHERE NO BETWEEN #{start} AND #{end}
	</select>
	
	<select id="totCnt" resultType="int" parameterType="riskSch">
		SELECT count(*) FROM 
			(SELECT p.pname, r.risk_name, r.risk_no, r.risk_status, to_char(r.risk_reg,'yyyy-mm-dd') AS risk_reg, nvl(to_char(r2.RISK_JOCHIUPT,'yyyy-mm-dd'), '-'), m.name 
			FROM LESOURCE l , PROJECT p, RISK r, RISKJOCHI r2, MEMBER m 
			WHERE p.PCODE = l.PCODE 
			AND p.pcode = r.PCODE 
			AND r.risk_no = r2.risk_no(+)
			AND r.id = m.id
			AND l.id = #{id}
			ORDER BY risk_reg DESC ) a
			WHERE risk_name like '%'||#{risk_name}||'%'
			AND name LIKE '%'||#{name}|| '%'
	</select>
	
	<insert id="insertRisk" parameterType="risk">
		INSERT INTO Risk (risk_no, risk_name, risk_content, risk_reg, risk_upt, id, pcode, risk_status, jochiPerson) 
				VALUES (seq_risk_no.nextval, #{risk_name}, #{risk_content}, sysdate, sysdate ,#{id}, #{pcode}, #{risk_status}, #{jochiPerson}) 
	</insert>
	
	<select id="getjochiPcode" parameterType="int" resultType="risk">
		SELECT pcode, m.id, name as m_name FROM LESOURCE l ,MEMBER m
		WHERE l.id = m.id 
		AND l.pcode = #{pcode}
	</select>
	
	<!-- risk_Update.jsp에서 pm일경우 select박스 조치자 조회 -->
	<select id="getUserJochi" parameterType="int" resultType="user">
		SELECT m.id, m.name 
		FROM LESOURCE l, MEMBER m
		WHERE m.id = l.id
			AND l.pcode = #{pcode}
	</select>
	<!-- 조치자 선택 -->
	<update id="jochiAuthority" parameterType="risk">
		update risk 
			set jochiPerson = #{jochiPerson}
			where risk_no = #{risk_no}
			and pcode = #{pcode}
	</update>
	
	<select id="projectList" parameterType="String" resultType="project">
		select p.pname, p.pcode from project p, LESOURCE l
		where l.id = #{id}
		and l.pcode = p.pcode
	</select>
	
	<select id="detailRiskPaging" parameterType="int" resultType="risk">
		select a.risk_name, a.risk_content, a.risk_status,to_char(a.risk_reg,'yyyy-mm-dd') as risk_reg, a.pcode,a.risk_no, a.jochiPerson ,b.pname, m.name as m_name from risk a, project b, member m
		where a.pcode = b.pcode
		and a.id = m.id
		and a.risk_no = #{risk_no}
	</select>
	
	<update id="upReadCnt" parameterType="int">
		update risk 
			set risk_cnt = risk_cnt+1
			where risk_no = #{risk_no}
	</update>
	
	<delete id="deleteDetailRiskPage" parameterType="int">
		delete from risk
		where risk_no = #{risk_no}
	</delete>
	<delete id="delDetailJochi" parameterType="int">
		delete from riskJochi
		where risk_no = #{risk_no}
	</delete>
	
	<!-- 모달 창 입력값들을 조치테이블에 입력 -->
	<insert id="uptModalContent" parameterType="risk">
		merge into riskJochi a
		using dual
		on (a.risk_no = #{risk_no})
		when matched then
		update set
			a.id = #{id},
			a.risk_jochiCont = #{risk_content},
			a.risk_jochiUpt = sysdate
		when not matched then
		insert (a.risk_no, a.id, a.risk_jochiCont, a.risk_jochiUpt)
		values (#{risk_no}, #{id}, #{risk_content}, sysdate)
	</insert>
	<!-- 리스크 상태 업데이트 -->
	<update id="uptRiskStatus" parameterType="risk">
		update risk
			set risk_status = #{risk_status}
		where risk_no = #{risk_no}
	</update>
	<!-- 조치내역에 출력될 내용 -->
	<select id = "riskJochiSelect" resultType="riskJochi" parameterType="int">
		select a.risk_no, a.risk_jochiCont, to_char(a.risk_jochiUpt, 'yyyy-mm-dd') AS risk_jochiUpt, m.name as m_name 
		from riskJochi a, risk b, member m 
		where a.risk_no = b.risk_no
		and m.id = a.id
		and b.risk_no = #{risk_no}
	</select>
	
	<!-- 프로젝트 리스크 출력 -->
	<select id="projRiskList" parameterType="int" resultType="risk">
		select rownum as no, r.risk_name, r.risk_status, r.id, r.risk_reg
		from risk r, member m 
		where r.id = m.id
		and pcode = #{pcode}
	</select>
	
	<select id="outputList01" resultType="risk" parameterType="outputs">
		select * from 
		(select rownum as no, d.* from
		(select r.risk_name, r.risk_status, m.id, to_char(risk_reg,'yyyy-mm-dd') as risk_reg 
		from risk r, member m
		where r.id = m.id
		and r.pcode = #{pcode}) d)
		where no between #{start} and #{end}
		order by no desc
	</select>
	
	<select id="outputCnt" resultType="int" parameterType="int">
		select count(*) from risk r, member m
		where r.id = m.id
		and r.pcode = #{pcode}
	</select>
	
</mapper>