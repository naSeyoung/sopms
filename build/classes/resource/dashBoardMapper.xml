<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sopms.dashboard.dao.DashboardDao">
	<resultMap id="projectInfo" type="sopms.vo.ProjectSum">
		<result column="pcode" property="pcode"/>
		<result column="pname" property="pname"/>
		<result column="id" property="pmId"/>
		<result column="name" property="pmName"/>		
		<result column="startdate" property="startDate"/>
		<result column="enddate" property="endDate"/>
		<result column="teamnum" property="teamNum"/>
		<result column="status" property="status"/>
		<result column="explanation" property="explanation"/>
	</resultMap>
	<resultMap id="riskStatusInfo" type="sopms.vo.RiskStatusCnt">
		<result column="risk_status" property="status"/>
		<result column="cnt" property="cnt"/>
	</resultMap>
	
	<select id="projectName" resultType="string" parameterType="string">
		SELECT p.pname FROM project p, lesource l
		WHERE p.pcode = l.pcode
		AND l.id = #{id}
		AND NOT p.status = '종료됨'
	</select>
	<select id="projectNamePM" resultType="string" parameterType="string">
		SELECT pname FROM project
		WHERE id = #{id}
		AND NOT status = '종료됨'
	</select>
	<select id="taskName" resultType="string" parameterType="string">
		SELECT title FROM wbs
		WHERE manager = #{id}
		AND NOT status = '종료됨'
	</select>
	<select id="taskNamePM" resultType="string" parameterType="string">
		SELECT title FROM wbs
		WHERE pm = #{id}
		AND NOT status = '종료됨'	
	</select>
	<select id="taskReqNamePM" resultType="string" parameterType="string">
		SELECT title FROM wbs
		WHERE pm = #{id}
		AND status = '승인요청'
	</select>
	<select id="riskName" resultType="string" parameterType="string">
		SELECT risk_name FROM risk
		WHERE id = #{id}
		AND NOT risk_status = '조치완료'
	</select>
	<select id="riskNamePM" resultType="string" parameterType="string">
		SELECT risk_name FROM RISK r, LESOURCE l 
		WHERE r.pcode = l.PCODE 
		AND l.ID = #{id}
		AND NOT r.RISK_STATUS = '조치완료'
	</select>
	<select id="outputName" resultType="string" parameterType="string">
		SELECT fname FROM wbs w, workfile wf
		WHERE w.manager = #{id}
		AND w.workcode = wf.workcode
		AND NOT w.status = '종료됨'
	</select>
	<select id="outputNamePM" resultType="string" parameterType="string">
		SELECT fname FROM wbs w, workfile wf
		WHERE w.pm = #{id}
		AND w.workcode = wf.workcode
		AND NOT w.status = '종료됨'
	</select>
	
	<select id="projectList" resultType="sopms.vo.ProjectSum" parameterType="sopms.vo.User">
		SELECT p.pcode, p.pname, p.id AS pmId, m.name AS pmName, ( TRUNC(p.enddate,'DD') - TRUNC(sysdate,'DD') ) AS status,
			TO_CHAR(p.startdate,'YYYY-MM-DD') startdate, TO_CHAR(p.enddate,'YYYY-MM-DD') enddate, NVL(pb.bmcode,' ') AS explanation
		FROM PROJECT p , LESOURCE l , member m ,
			(	SELECT pcode, bmcode FROM project_bookmark 
				WHERE id= #{id} ) pb
		WHERE p.id = m.id
		AND p.pcode = l.pcode 
		AND l.id = #{id}
		AND NOT p.status = '종료됨'
		AND p.pcode = pb.pcode(+)
		ORDER BY p.pname
	</select>
	
	<insert id="insertBookmark" parameterType="sopms.vo.ProjectBookmark">
		INSERT INTO project_bookmark
		VALUES (#{id}||'-'||#{pcode}, #{pcode}, #{id})
	</insert>
	<delete id="deleteBookmark" parameterType="sopms.vo.ProjectBookmark">
		DELETE FROM project_bookmark
		WHERE pcode = #{pcode}
		AND id = #{id}
	</delete>
	<select id="bookmarkList" parameterType="string" resultType="sopms.vo.ProjectSum">
		SELECT p.pcode, p.pname, p.id AS pmId, m.name AS pmName, ( TRUNC(p.enddate,'DD') - TRUNC(sysdate,'DD') ) AS status,
			TO_CHAR(p.startdate,'YYYY-MM-DD') startdate, TO_CHAR(p.enddate,'YYYY-MM-DD') enddate 
		FROM project p, project_bookmark pb, member m
		WHERE p.pcode = pb.pcode
		AND p.id = m.id
		AND pb.id = #{id} 
		ORDER BY p.pname
	</select>

	<select id="riskStatusCnt" parameterType="string" resultMap="riskStatusInfo">
		SELECT risk_status, count(*) cnt FROM risk r
		WHERE id = #{id}
		GROUP BY risk_status
	</select>
	<select id="riskStatusCntPM" parameterType="string" resultMap="riskStatusInfo">
		SELECT risk_status, count(*) cnt FROM RISK r , PROJECT p , LESOURCE l 
		WHERE r.pcode = l.pcode 
		AND r.pcode = p.pcode 
		AND l.id = #{id}
		AND NOT p.STATUS = '종료됨'
		GROUP BY r.risk_status
	</select>
	<select id="riskMonthly" parameterType="string" resultType="sopms.vo.RiskMonthly">
		SELECT TO_CHAR(b.dt, 'YYYY-MM') AS month
		     , NVL(SUM(a.cnt), 0) count
		FROM(	SELECT TRUNC(risk_reg,'DD') risk_reg, count(*) cnt FROM risk
				WHERE risk_reg BETWEEN ADD_MONTHS(TRUNC(SYSDATE,'MM'),-6) AND ADD_MONTHS(TRUNC(SYSDATE,'MM'),1)
				AND id = #{id}
				GROUP BY TRUNC(risk_reg,'DD')
			) a,
			(	SELECT ADD_MONTHS(TRUNC(SYSDATE,'MM'),-6) + LEVEL - 1 AS dt
				FROM dual 
				CONNECT BY LEVEL <![CDATA[<=]]> (ADD_MONTHS(TRUNC(SYSDATE,'MM'),1) 
									- ADD_MONTHS(TRUNC(SYSDATE,'MM'),-6))
			) b
		WHERE b.dt = a.risk_reg(+)
		GROUP BY TO_CHAR(b.dt, 'YYYY-MM')
		ORDER BY TO_CHAR(b.dt, 'YYYY-MM')
	</select>
	<select id="riskMonthlyPM" parameterType="string" resultType="sopms.vo.RiskMonthly">
		SELECT TO_CHAR(b.dt, 'YYYY-MM') month
		     , NVL(SUM(a.cnt), 0) count
		FROM(	SELECT TRUNC(risk_reg,'DD') risk_reg, count(*) cnt FROM risk r, lesource l
				WHERE risk_reg BETWEEN ADD_MONTHS(TRUNC(SYSDATE,'MM'),-6) AND ADD_MONTHS(TRUNC(SYSDATE,'MM'),1)
				AND r.pcode = l.pcode
				AND l.id = #{id}
				GROUP BY TRUNC(risk_reg,'DD')
			) a,
			(	SELECT ADD_MONTHS(TRUNC(SYSDATE,'MM'),-6) + LEVEL - 1 AS dt
				FROM dual 
				CONNECT BY LEVEL <![CDATA[<=]]> (ADD_MONTHS(TRUNC(SYSDATE,'MM'),1) 
									- ADD_MONTHS(TRUNC(SYSDATE,'MM'),-6))
			) b
		WHERE b.dt = a.risk_reg(+)
		GROUP BY TO_CHAR(b.dt, 'YYYY-MM')
		ORDER BY TO_CHAR(b.dt, 'YYYY-MM')
	</select>
	<select id="boardNotice" resultType="sopms.vo.Notice">
		SELECT * FROM (
			SELECT rownum rnum, bcode, btitle, id, name, readcnt, dept, RANK, 
				CASE	WHEN TRUNC(SYSDATE,'DD')=TRUNC(regdte,'DD') THEN TO_CHAR(regdte,'HH24:MI')
						ELSE TO_CHAR(regdte,'fmMM-DD')
				END AS regdte
			FROM(
				SELECT b.*, m.name, m.dept, m.rank
				FROM board b, MEMBER m
				WHERE b.id = m.id
				ORDER BY regdte DESC
			)
		)
		WHERE rnum <![CDATA[<=]]> 5
	</select>
	
	<select id="empInfo" parameterType="string" resultType="sopms.vo.User">
		SELECT id, name, rank, dept FROM member
		WHERE id = #{id}
	</select>
</mapper>